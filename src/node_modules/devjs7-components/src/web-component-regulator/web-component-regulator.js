export class WebComponentRegulator extends HTMLElement {

    _localValue = 50;
    _percentageNumber = undefined;
    _gaugeEl = undefined;
    _inputEl = undefined;

    connectedCallback() {
        const shadow = document.createElement('div');
        shadow.innerHTML = this._style + this._template;
        this._gaugeEl = shadow.querySelector('.regulator-gauge');
        this._inputEl = shadow.querySelector('input');

        this.attachShadow({mode: 'open'}).appendChild(shadow);

        this._inputEl.addEventListener('change', this._onChange);
        this._renderValue();
    }

    _onChange = (e) => {
        this._localValue = parseInt(e.target.value);

        this.onChange && this.onChange(this._localValue);

        this._renderValue();
    };
    _renderValue = () => {
        const value = this._percentageNumber >= 0 ? this._percentageNumber : this._localValue;

        this._gaugeEl.style.background = `linear-gradient(to right, red, transparent ${value}%)`;
        this._gaugeEl.innerText = `${value}%`;

        this._inputEl.value = value;
    };

    set percentageNumber(newValue) {
        this._percentageNumber = newValue;
        this._renderValue();
    }

    get percentageNumber() {
        return this._percentageNumber;
    }

    _template = `        
        <div class='web-component-regulator'>
            <div class='regulator-gauge'></div>
            <input type='range'
                   class='regulator-input'
                   min='0'
                   max='100'
                   step='1'/>
        </div>
     `;
    _style = `<style>
                .web-component-regulator {
                    width: 500px;
                    padding: 50px;
                }
                
                .web-component-regulator > .regulator-gauge {
                    font-family: Roboto, sans-serif;
                    font-size: 25px;
                
                    width: 100%;
                    height: 30px;
                
                    border: 1px solid red;
                    padding: 5px;
                    text-align: right;
                }
                
                .web-component-regulator > .regulator-input {
                    width: 100%;
                    margin-top: 10px;
                }
         </style>
    `;
}

customElements.define('web-component-regulator', WebComponentRegulator);
